---
import { translations } from "../../translations/i18n";

const lang = (Astro.locals as { lang: "en" | "es" }).lang || "en";
const t = translations.CONTACT[lang];
---

<form
  id="submitForm"
  class="space-y-6 w-full"
  data-error-message={t.FORM.emailSent.error}
  data-success-message={t.FORM.emailSent.success}
>
  <div>
    <label for="name" class="text-sm text-cyan-500"
      >{t.FORM.fullname.title}</label
    >
    <input
      type="text"
      id="name"
      name="name"
      required
      placeholder={t.FORM.fullname.placeholder}
      class="w-full border-b-2 border-gray-600 text-white focus:border-cyan-500 outline-none py-2"
    />
  </div>

  <div class="relative">
    <label for="email" class="text-sm text-cyan-500">{t.FORM.email.title}</label
    >
    <input
      type="email"
      id="email"
      name="email"
      required
      placeholder={t.FORM.email.placeholder}
      class="w-full border-b-2 border-gray-600 text-white focus:border-cyan-500 outline-none py-2"
    />
  </div>

  <div class="relative">
    <label for="subject" class="text-sm text-cyan-500"
      >{t.FORM.subject.title}</label
    >
    <input
      type="text"
      id="subject"
      name="subject"
      required
      placeholder={t.FORM.subject.placeholder}
      class="w-full bg-transparent border-b-2 border-gray-600 text-white focus:border-cyan-500 outline-none py-2"
    />
  </div>

  <div>
    <label for="message" class="text-sm text-cyan-500"
      >{t.FORM.message.title}</label
    >
    <textarea
      id="message"
      name="message"
      required
      rows="4"
      placeholder={t.FORM.message.placeholder}
      class="w-full bg-transparent border-b-2 border-gray-600 text-white focus:border-cyan-500 outline-none py-2 resize-none"
    ></textarea>
  </div>

  <!-- Honeypot Field (Hidden for humans, visible for bots) -->
  <input
    type="text"
    name="hp_field"
    style="display: none;"
    autocomplete="off"
  />

  <button
    type="submit"
    class="w-full p-3 text-white bg-cyan-600 hover:bg-cyan-700 rounded-md font-semibold transition cursor-pointer"
  >
    {t.FORM.sendButton}
  </button>
</form>

<style>
  /* Styles for input and textarea with autocomplete on Chrome and Safari */
  input:-webkit-autofill,
  textarea:-webkit-autofill {
    background-color: transparent !important; /* Elimina el fondo */
    color: white !important; /* Mantén el color del texto */
    transition: background-color 5000s ease-in-out 0s; /* Retraso en la transición del fondo */
  }

  /* Keep the background transparent */
  input:-webkit-autofill:focus,
  textarea:-webkit-autofill:focus {
    background-color: transparent !important;
    color: white !important;
  }

  /* Adjusts the color of the bottom bar when the focus is received */
  /* input:-webkit-autofill {
    border-color: #00bcd4 !important;
  } */
</style>

<script>
  import axios from "axios";

  const form = document.getElementById("submitForm");

  export async function handleSubmit(e: Event) {
    e.preventDefault();

    const form = e.target as HTMLFormElement;
    const formData = new FormData(form);
    const data = Object.fromEntries(formData);

    try {
      const response = await axios.post("/api/send-email", data);
      alert(
        response.data.success
          ? form.dataset.successMessage
          : form.dataset.errorMessage,
      );

      if (response.data.success) {
        form.reset();
      }
    } catch (error) {
      console.error("Error:", error);
      alert("Error when sending mail");
    }
  }

  form?.addEventListener("submit", handleSubmit);
</script>

<!-- Function to capitalize -->
<!-- <script>
  const nameInput = document.getElementById("name") as HTMLInputElement;

  function updateName(event: Event): void {
    const inputElement = event.target as HTMLInputElement;
    const newPalabra = inputElement.value
      .split(" ")
      .map((palabra) =>
        palabra !== "" ? palabra[0].toUpperCase() + palabra.slice(1) : "",
      )
      .join(" ");
    nameInput.value = newPalabra;
  }

  nameInput?.addEventListener("input", updateName);
</script> -->

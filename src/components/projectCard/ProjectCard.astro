---
import ButtonBlue from "../buttons/ButtonBlue.astro";
import GeneralButton from "../buttons/GeneralButton.astro";

type ProjectTypes = {
  src: string;
  title: string;
  date: string;
  technologies: Array<Record<string, any>>;
  github: string;
  live: string;
};

const { src, title, date, technologies, github, live } =
  Astro.props as ProjectTypes;
---

<div
  class="flex bg-gray-800/60 rounded-lg overflow-hidden border border-gray-800 shadow-sm"
>
  <!-- Image -->
  <div class="max-w-2/5 flex items-center justify-center bg-black/30">
    <a
      class="Container relative rounded-sm w-[90%] overflow-hidden cursor-pointer"
      href={src}
      target="_blank"
    >
      <img src={src} alt="Project-Image" class="w-full" />
      <div class="Overlay">
        <div class="Text">Click to see the image</div>
      </div>
    </a>
  </div>

  <!-- Project Description -->
  <div class="max-w-2/3 px-6 py-8">
    <h3 class="flex flex-col text-cyan-500 font-medium">
      {title}
      <span class="text-base font-light">
        {date}
      </span>
    </h3>
    <slot />

    <!-- Technologies Icons -->
    <div class="mt-6 flex gap-2 flex-wrap">
      {
        technologies.map((technologie) => (
          <div class="flex items-center gap-2 px-4 rounded-full py-2 bg-gray-800">
            <technologie.icon class="size-6" aria-hidden="true" />
            {technologie.name}
          </div>
        ))
      }
    </div>

    <!-- Buttons to view projects -->
    <div class="flex gap-2 mt-6">
      <GeneralButton as="a" href={github} title={github} target="_blank">
        View in GitHub
      </GeneralButton>
      {
        live && (
          <ButtonBlue as="a" href={live} title={live} target="_blank">
            View deploy in Vercel
          </ButtonBlue>
        )
      }
    </div>
  </div>
</div>

<style>
  .Overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(8, 42, 53, 0.8);
    clip-path: circle(0% at center);
    transition: clip-path 0.3s ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .Container:hover .Overlay {
    clip-path: circle(150% at center);
  }

  .Text {
    color: white;
    font-size: 1.2rem;
    opacity: 0;
    transition: opacity 0.3s ease-in-out 0.3s;
  }

  .Container:hover .Text {
    opacity: 1;
  }
</style>
